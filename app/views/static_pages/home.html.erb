<%= render 'home' %>

<script>
$(function(){

  // initialize drag and drop elements with Jquery plugin //
  $('.draggable').draggable({
    snap: ".droppable",
    snapTolerance: 10,
    // revert pieces to original position if not valid move //
    stop: function(event, ui) {
      var piece = $(this);
      var pieceStyle = $(this).css('top');
      if (pieceStyle !== '0px') {
        piece.animate({
          top: 0,
          left: 0,
        }, 500);
      }
    },
    start: function(event, ui) {
      var startingPoint = $(this).closest('div').attr('id');
      var pieceType = $(this).attr('class');

      // set forward movement for pawns //
      if (pieceType.match(/glyphicon-pawn black/)) {
        $('.droppable').droppable("disable");
        $(this).parent().next().droppable('enable');
      }
      else if (pieceType.match(/glyphicon-pawn white/)) {
        $('.droppable').droppable("disable");
        $(this).parent().prev().droppable('enable');
      }
      // set vertical and horizontal movement for rooks //
      else if (pieceType.match(/glyphicon-tower/)) {
        $('.droppable').droppable("disable");
        var letterVar = startingPoint[4];
        var numberVar = startingPoint[5];
        $('.chess-holder').children('div[class*=col]').children('div[id*='+ letterVar +']').droppable('enable');
        $('.chess-holder').children('div[class*=col]').children('div[id*='+ numberVar +']').droppable('enable');
        
      }

      // set diagonal movement for bishops //

      else if (pieceType.match(/glyphicon-bishop/)) {
        $('.droppable').droppable("disable");

        // set +x+y diagonal //
        var letterVar = startingPoint[4];
        var yAxis = parseInt(startingPoint[5]);
        var letterArray = ["a", "b", "c", "d", "e", "f", "g", "h"];
        var xAxis = letterArray.indexOf(letterVar) + 1;
        var divArray = [];
        while (xAxis <= 8 && yAxis <= 8) {
          divArray.push(letterArray[xAxis -1] + yAxis);
          xAxis += 1;
          yAxis += 1;
        }
        divArray.forEach(enableElements);

        function enableElements(entry) {
          $('.chess-holder').children('div[class*=col]').children('div[id*='+ entry +']').droppable('enable');
        }
        // set -x-y diagonal //
        xAxis = letterArray.indexOf(letterVar) + 1;
        yAxis = parseInt(startingPoint[5]);
        while (xAxis >= 1 && yAxis >= 1 ) {
          divArray.push(letterArray[xAxis - 1] + yAxis);
          xAxis -= 1;
          yAxis -= 1;
        }
        divArray.forEach(enableElements);

        // set +x-y diagonal //
        xAxis = letterArray.indexOf(letterVar) + 1;
        yAxis = parseInt(startingPoint[5]);
        while (xAxis <= 8 && yAxis >= 1 ) {
          divArray.push(letterArray[xAxis - 1] + yAxis);
          xAxis += 1;
          yAxis -= 1;
        }
        divArray.forEach(enableElements);

        // set -x+y diagonal //
        xAxis = letterArray.indexOf(letterVar) + 1;
        yAxis = parseInt(startingPoint[5]);
        while (xAxis >= 1 && yAxis <= 8) {
          divArray.push(letterArray[xAxis - 1] + yAxis);
          xAxis -= 1;
          yAxis += 1;
        }
        divArray.forEach(enableElements);
        console.log(divArray);
      }

      // set movement for knights //

      else if (pieceType.match(/glyphicon-knight/)) {
        $('.droppable').droppable("disable");
        var letterVar = startingPoint[4];
        var yAxis = parseInt(startingPoint[5]);
        var letterArray = ["a", "b", "c", "d", "e", "f", "g", "h"];
        var xAxis = letterArray.indexOf(letterVar) + 1;
        var divArray = [];

        divArray.push(letterArray[xAxis -2] + (yAxis-2));
        divArray.push(letterArray[xAxis -2] + (yAxis+2));
        divArray.push(letterArray[xAxis -3] + (yAxis-1));
        divArray.push(letterArray[xAxis -3] + (yAxis+1));
        divArray.push(letterArray[xAxis] + (yAxis+2));
        divArray.push(letterArray[xAxis] + (yAxis-2));
        divArray.push(letterArray[xAxis +1] + (yAxis+1));
        divArray.push(letterArray[xAxis +1] + (yAxis-1));

        divArray.forEach(enableElements);
      }

      // set movements for queen //

      else if (pieceType.match(/glyphicon-queen/)) {
        $('.droppable').droppable("disable");
        var letterVar = startingPoint[4];
        var numberVar = startingPoint[5];
        $('.chess-holder').children('div[class*=col]').children('div[id*='+ letterVar +']').droppable('enable');
        $('.chess-holder').children('div[class*=col]').children('div[id*='+ numberVar +']').droppable('enable');
        // set +x+y diagonal //
        var letterVar = startingPoint[4];
        var yAxis = parseInt(startingPoint[5]);
        var letterArray = ["a", "b", "c", "d", "e", "f", "g", "h"];
        var xAxis = letterArray.indexOf(letterVar) + 1;
        var divArray = [];
        while (xAxis <= 8 && yAxis <= 8) {
          divArray.push(letterArray[xAxis -1] + yAxis);
          xAxis += 1;
          yAxis += 1;
        }
        divArray.forEach(enableElements);
        // set -x-y diagonal //
        xAxis = letterArray.indexOf(letterVar) + 1;
        yAxis = parseInt(startingPoint[5]);
        while (xAxis >= 1 && yAxis >= 1 ) {
          divArray.push(letterArray[xAxis - 1] + yAxis);
          xAxis -= 1;
          yAxis -= 1;
        }
        divArray.forEach(enableElements);

        // set +x-y diagonal //
        xAxis = letterArray.indexOf(letterVar) + 1;
        yAxis = parseInt(startingPoint[5]);
        while (xAxis <= 8 && yAxis >= 1 ) {
          divArray.push(letterArray[xAxis - 1] + yAxis);
          xAxis += 1;
          yAxis -= 1;
        }
        divArray.forEach(enableElements);

        // set -x+y diagonal //
        xAxis = letterArray.indexOf(letterVar) + 1;
        yAxis = parseInt(startingPoint[5]);
        while (xAxis >= 1 && yAxis <= 8) {
          divArray.push(letterArray[xAxis - 1] + yAxis);
          xAxis -= 1;
          yAxis += 1;
        }
        divArray.forEach(enableElements);
        console.log(divArray);

      }

      else if (pieceType.match(/glyphicon-king/)) {
        $('.droppable').droppable("disable");
        var letterVar = startingPoint[4];
        var numberVar = startingPoint[5];
        // set +x+y diagonal //
        var letterVar = startingPoint[4];
        var yAxis = parseInt(startingPoint[5]);
        var letterArray = ["a", "b", "c", "d", "e", "f", "g", "h"];
        var xAxis = letterArray.indexOf(letterVar) + 1;
        var divArray = [];
        console.log(xAxis);
        console.log(yAxis);
        divArray.push(letterArray[xAxis -1] + (yAxis + 1));
        divArray.push(letterArray[xAxis -1] + (yAxis - 1));
        divArray.push(letterArray[xAxis -2] + (yAxis));
        divArray.push(letterArray[xAxis] + (yAxis));
        divArray.push(letterArray[xAxis -2] + (yAxis + 1));
        divArray.push(letterArray[xAxis -2] + (yAxis - 1));
        divArray.push(letterArray[xAxis] + (yAxis + 1));
        divArray.push(letterArray[xAxis] + (yAxis - 1));

        divArray.forEach(enableElements);
        console.log(divArray);
      }

      if (pieceType.match(/white/) !== null) {
        $('.white').parent().droppable("disable");
      }
      else if (pieceType.match(/black/) !== null) {
        $('.black').parent().droppable("disable");
      }


    }
  });

  $('.black').draggable('disable');

// disable opponent pieces when player's turn //
  $('.droppable').droppable({
    revert: "invalid",
    drop: function(event, ui) {
      var newBox = $(this).attr('id');
      var stationBox = $(this);
      var piece = ui.draggable.attr('class');
      var oldBox = ui.draggable.parent().attr('id');
      var classCheck = stationBox.children().attr('class');

      if (stationBox.children().length > 0 && piece.match(/white/) !== null) {
        stationBox.children().detach().appendTo('.black-pieces');
      }
      else if (stationBox.children().length > 0 && piece.match(/black/) !== null) {
        stationBox.children().detach().appendTo('.white-pieces');
      }


      ui.draggable.detach().appendTo($(this)).css({'top': '0', 'left': '0'});

      var newHome = ui.draggable.parent().attr('id');
      console.log(oldBox);
      console.log(newHome);


      var boolTest = $('.white').draggable("option", "disabled");
      if (boolTest === false) {
        $('.white').draggable('disable');
        $('.black').draggable('enable');
      }
      else {
        $('.white').draggable('enable');
        $('.black').draggable('disable');
      }
    }
  });


});
</script>
